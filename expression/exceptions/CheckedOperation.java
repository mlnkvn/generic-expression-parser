package expression.exceptions;import java.util.*;import expression.*;public abstract class CheckedOperation implements All {    protected All first;    protected All second;    protected String sign;    abstract int operation(int first, int second);    @Override    public int evaluate(int val) {        return operation(first.evaluate(val), second.evaluate(val));    }    @Override    public int evaluate(int val1, int val2, int val3) {        return operation(first.evaluate(val1, val2, val3), second.evaluate(val1, val2, val3));    }    @Override    public String toString() {        return "(" + first.toString() + sign + second.toString() + ")";    }    @Override    public boolean equals(Object object) {        if (object == null || this.getClass() != object.getClass()) {            return false;        }        CheckedOperation oper = (CheckedOperation) object;        return first.equals(oper.first) && second.equals(oper.second);    }    @Override    public int hashCode() {        return Objects.hash(first, second, getClass());    }}