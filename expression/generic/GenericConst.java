package expression.generic;public class GenericConst<T> implements GenericGeneralExpression<T> {    protected T val;    protected NumberMode<T> calculator;    public GenericConst(T val, NumberMode<T> calculator) {        this.val = val;        this.calculator = calculator;    }    @Override    public T evaluate(T val) {        return this.val;    }    @Override    public T evaluate(T val1, T val2, T val3) {        return calculator.parse(val.toString());    }    @Override    public String toString() {        return val.toString();    }    @Override    public boolean equals(Object object) {        if (object == null || this.getClass() != object.getClass()) {            return false;        }        GenericConst<?> cnst = (GenericConst<?>) object;        return cnst.val.equals(val);    }    @Override    public int hashCode() {        return 17 * calculator.intValue(val);    }}