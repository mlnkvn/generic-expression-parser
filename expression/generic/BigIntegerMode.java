package expression.generic;import java.math.BigInteger;public class BigIntegerMode implements NumberMode<BigInteger> {    @Override    public BigInteger parse(String string) {        return new BigInteger(string);    }    @Override    public BigInteger add(BigInteger a, BigInteger b) {        return a.add(b);    }    @Override    public BigInteger subtract(BigInteger a, BigInteger b) {        return a.subtract(b);    }    @Override    public BigInteger multiply(BigInteger a, BigInteger b) {        return a.multiply(b);    }    @Override    public BigInteger divide(BigInteger a, BigInteger b) {        return a.divide(b);    }    @Override    public BigInteger min(BigInteger a, BigInteger b) {        return a.min(b);    }    @Override    public BigInteger max(BigInteger a, BigInteger b) {        return a.max(b);    }    @Override    public BigInteger negate(BigInteger a) {        return a.negate();    }    @Override    public int intValue(BigInteger a) {        return a.intValue();    }    @Override    public boolean compare(BigInteger a, BigInteger b) {        return a.equals(b);    }    @Override    public BigInteger count(BigInteger a) {        return BigInteger.valueOf(a.bitCount());    }}