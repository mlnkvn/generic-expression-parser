package expression.generic;import java.util.Objects;public class UncheckedShortMode implements NumberMode<Short> {    @Override    public Short parse(String string) {        return (short)Integer.parseInt(string);    }    @Override    public Short add(Short a, Short b) {        return (short) (a + b);    }    @Override    public Short subtract(Short a, Short b) {        return (short) (a - b);    }    @Override    public Short multiply(Short a, Short b) {        return (short) (a * b);    }    @Override    public Short divide(Short a, Short b) {        return (short) (a / b);    }    @Override    public Short min(Short a, Short b) {        if (a < b) {            return a;        } else {            return b;        }    }    @Override    public Short max(Short a, Short b) {        if (a > b) {            return a;        } else {            return b;        }    }    @Override    public Short negate(Short a) {        return (short) (-a);    }    @Override    public int intValue(Short a) {        return a;    }    @Override    public boolean compare(Short a, Short b) {        return Objects.equals(a, b);    }    @Override    public Short count(Short a) {        return (short)Integer.bitCount(a.intValue() & 0xFFFF);    }}